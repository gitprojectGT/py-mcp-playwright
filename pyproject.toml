[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "py-mcp-playwright"
version = "0.1.0"
description = "Python Playwright testing framework with MCP integration"
authors = [
    { name = "Playwright Test Generator", email = "test@example.com" }
]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Testing",
    "Topic :: Internet :: WWW/HTTP :: Browsers",
]
keywords = ["playwright", "testing", "automation", "mcp", "api-testing"]

dependencies = [
    "playwright>=1.40.0",
    "pytest>=7.0.0",
    "pytest-playwright>=0.4.0",
    "pytest-asyncio>=0.21.0",
    "requests>=2.31.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "faker>=20.0.0",
    "jsonschema>=4.19.0",
    "aiohttp>=3.9.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pytest-cov>=4.1.0",
    "pre-commit>=3.4.0",
    "isort>=5.12.0",
]

[project.urls]
"Homepage" = "https://github.com/example/py-mcp-playwright"
"Bug Reports" = "https://github.com/example/py-mcp-playwright/issues"
"Source" = "https://github.com/example/py-mcp-playwright"

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
markers = [
    "api: marks tests as API tests",
    "ui: marks tests as UI tests", 
    "integration: marks tests as integration tests",
    "slow: marks tests as slow running",
    "smoke: marks tests as smoke tests",
]

[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311", "py312", "py313"]
include = '\.pyi?$'
extend-exclude = '''
/(
  \.git
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "playwright.*",
    "pytest_playwright.*",
]
ignore_missing_imports = true