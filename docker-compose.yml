version: '3.8'

services:
  playwright-tests:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: py-mcp-playwright-tests
    environment:
      # Test configuration
      - HEADLESS=true
      - SLOW_MO=0
      - TIMEOUT=30000
      - BROWSER_TIMEOUT=30000
      - BASE_URL=http://localhost:3000
      - API_BASE_URL=https://jsonplaceholder.typicode.com
      - API_TIMEOUT=30000
      
      # Test environment
      - TEST_ENV=docker
      - DEBUG=false
      - LOG_LEVEL=INFO
      - CI=true
      
      # Parallel testing
      - PYTEST_WORKERS=4
      
      # Recording and reporting
      - SCREENSHOT_ON_FAILURE=true
      - VIDEO_ON_FAILURE=true
      - TRACE_ON_FAILURE=true
      
      # Performance testing
      - MAX_RESPONSE_TIME=5.0
      - CONCURRENT_USERS=10
      - LOAD_TEST_DURATION=60
    volumes:
      # Mount source code for development
      - .:/app
      # Mount test results to host
      - ./test-results:/app/test-results
      # Mount cache for faster rebuilds
      - playwright-cache:/home/playwright/.cache
    working_dir: /app
    command: python -m pytest --tb=short -v
    networks:
      - playwright-network

  # Development service for interactive testing
  playwright-dev:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: py-mcp-playwright-dev
    environment:
      - HEADLESS=false
      - DEBUG=true
      - TEST_ENV=development
    volumes:
      - .:/app
      - ./test-results:/app/test-results
      - playwright-cache:/home/playwright/.cache
    working_dir: /app
    command: tail -f /dev/null  # Keep container running for interactive use
    networks:
      - playwright-network
    stdin_open: true
    tty: true

  # Service for running specific test suites
  playwright-api-tests:
    extends: playwright-tests
    container_name: py-mcp-playwright-api-tests
    command: python -m pytest -m api --tb=short -v

  playwright-ui-tests:
    extends: playwright-tests
    container_name: py-mcp-playwright-ui-tests
    command: python -m pytest -m ui --tb=short -v

  playwright-integration-tests:
    extends: playwright-tests
    container_name: py-mcp-playwright-integration-tests
    command: python -m pytest -m integration --tb=short -v

  playwright-smoke-tests:
    extends: playwright-tests
    container_name: py-mcp-playwright-smoke-tests
    command: python -m pytest -m smoke --tb=short -v

  # Coverage testing service
  playwright-coverage:
    extends: playwright-tests
    container_name: py-mcp-playwright-coverage
    command: python -m pytest --cov=src --cov-report=html --cov-report=term-missing --cov-fail-under=80 -v

volumes:
  playwright-cache:
    driver: local

networks:
  playwright-network:
    driver: bridge